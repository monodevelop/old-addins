// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Profiling {
    
    
    public partial class SelectExecutableDialog {
        
        private Gtk.Table table;
        
        private Gtk.Button buttonOpen;
        
        private Gtk.ComboBox comboProfilers;
        
        private Gtk.Entry entryArguments;
        
        private Gtk.Entry entryExecutable;
        
        private Gtk.Label label1;
        
        private Gtk.Label label2;
        
        private Gtk.Label label3;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Profiling.SelectExecutableDialog
            this.Name = "MonoDevelop.Profiling.SelectExecutableDialog";
            this.Title = Mono.Unix.Catalog.GetString("Select Executable");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            this.HasSeparator = false;
            // Internal child MonoDevelop.Profiling.SelectExecutableDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.table = new Gtk.Table(((uint)(3)), ((uint)(3)), false);
            this.table.Name = "table";
            this.table.RowSpacing = ((uint)(6));
            this.table.ColumnSpacing = ((uint)(6));
            // Container child table.Gtk.Table+TableChild
            this.buttonOpen = new Gtk.Button();
            this.buttonOpen.CanFocus = true;
            this.buttonOpen.Name = "buttonOpen";
            this.buttonOpen.UseStock = true;
            this.buttonOpen.UseUnderline = true;
            this.buttonOpen.Label = "gtk-open";
            this.table.Add(this.buttonOpen);
            Gtk.Table.TableChild w2 = ((Gtk.Table.TableChild)(this.table[this.buttonOpen]));
            w2.LeftAttach = ((uint)(2));
            w2.RightAttach = ((uint)(3));
            w2.XOptions = ((Gtk.AttachOptions)(4));
            w2.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.comboProfilers = Gtk.ComboBox.NewText();
            this.comboProfilers.Name = "comboProfilers";
            this.table.Add(this.comboProfilers);
            Gtk.Table.TableChild w3 = ((Gtk.Table.TableChild)(this.table[this.comboProfilers]));
            w3.TopAttach = ((uint)(2));
            w3.BottomAttach = ((uint)(3));
            w3.LeftAttach = ((uint)(1));
            w3.RightAttach = ((uint)(3));
            w3.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.entryArguments = new Gtk.Entry();
            this.entryArguments.CanFocus = true;
            this.entryArguments.Name = "entryArguments";
            this.entryArguments.IsEditable = true;
            this.entryArguments.InvisibleChar = '●';
            this.table.Add(this.entryArguments);
            Gtk.Table.TableChild w4 = ((Gtk.Table.TableChild)(this.table[this.entryArguments]));
            w4.TopAttach = ((uint)(1));
            w4.BottomAttach = ((uint)(2));
            w4.LeftAttach = ((uint)(1));
            w4.RightAttach = ((uint)(3));
            w4.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.entryExecutable = new Gtk.Entry();
            this.entryExecutable.CanFocus = true;
            this.entryExecutable.Name = "entryExecutable";
            this.entryExecutable.IsEditable = true;
            this.entryExecutable.InvisibleChar = '●';
            this.table.Add(this.entryExecutable);
            Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(this.table[this.entryExecutable]));
            w5.LeftAttach = ((uint)(1));
            w5.RightAttach = ((uint)(2));
            w5.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.label1 = new Gtk.Label();
            this.label1.Name = "label1";
            this.label1.Xalign = 0F;
            this.label1.LabelProp = Mono.Unix.Catalog.GetString("Executable");
            this.table.Add(this.label1);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(this.table[this.label1]));
            w6.XOptions = ((Gtk.AttachOptions)(4));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.label2 = new Gtk.Label();
            this.label2.Name = "label2";
            this.label2.Xalign = 0F;
            this.label2.LabelProp = Mono.Unix.Catalog.GetString("Arguments");
            this.table.Add(this.label2);
            Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(this.table[this.label2]));
            w7.TopAttach = ((uint)(1));
            w7.BottomAttach = ((uint)(2));
            w7.XOptions = ((Gtk.AttachOptions)(4));
            w7.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table.Gtk.Table+TableChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.Xalign = 0F;
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("Profiler");
            this.table.Add(this.label3);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(this.table[this.label3]));
            w8.TopAttach = ((uint)(2));
            w8.BottomAttach = ((uint)(3));
            w8.XOptions = ((Gtk.AttachOptions)(4));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            w1.Add(this.table);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(w1[this.table]));
            w9.Position = 0;
            w9.Expand = false;
            w9.Fill = false;
            // Internal child MonoDevelop.Profiling.SelectExecutableDialog.ActionArea
            Gtk.HButtonBox w10 = this.ActionArea;
            w10.Name = "dialog1_ActionArea";
            w10.Spacing = 6;
            w10.BorderWidth = ((uint)(5));
            w10.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w11 = ((Gtk.ButtonBox.ButtonBoxChild)(w10[this.buttonCancel]));
            w11.Expand = false;
            w11.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.Sensitive = false;
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w12 = ((Gtk.ButtonBox.ButtonBoxChild)(w10[this.buttonOk]));
            w12.Position = 1;
            w12.Expand = false;
            w12.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 488;
            this.DefaultHeight = 185;
            this.Show();
            this.entryExecutable.Changed += new System.EventHandler(this.ExecutableChanged);
            this.buttonOpen.Clicked += new System.EventHandler(this.OpenClicked);
        }
    }
}
