
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.MonoMac.Gui
{
	public partial class MonoMacPackagingSettingsWidget
	{
		private global::Gtk.VBox vbox1;
		private global::Gtk.CheckButton includeMonoCheck;
		private global::Gtk.Label labelBlah;
		private global::Gtk.Alignment alignment2;
		private global::Gtk.HBox hbox1;
		private global::Gtk.Label linkerLabel;
		private global::Gtk.ComboBox linkerCombo;
		private global::Gtk.Table table1;
		private global::MonoDevelop.MacDev.SigningIdentityCombo bundleIdentityCombo;
		private global::Gtk.Label bundleSigningLabel;
		private global::Gtk.CheckButton createPackageCheck;
		private global::Gtk.Label label3636;
		private global::Gtk.Label label2;
		private global::Gtk.Label label8;
		private global::MonoDevelop.MacDev.SigningIdentityCombo packageIdentityCombo;
		private global::Gtk.Label packageSigningLabel;
		private global::MonoDevelop.Components.FileEntry productDefinitionFileEntry;
		private global::Gtk.Label productDefinitionLabel;
		private global::Gtk.CheckButton signBundleCheck;
		private global::Gtk.Label label12;
		private global::Gtk.CheckButton signPackageCheck;
		private global::Gtk.Label label1;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.MonoMac.Gui.MonoMacPackagingSettingsWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoDevelop.MonoMac.Gui.MonoMacPackagingSettingsWidget";
			// Container child MonoDevelop.MonoMac.Gui.MonoMacPackagingSettingsWidget.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.includeMonoCheck = new global::Gtk.CheckButton ();
			this.includeMonoCheck.TooltipMarkup = "The Mono runtime will be included in the app bundle, so users will \nnot have to install it. However, this makes the bundle larger.";
			this.includeMonoCheck.CanFocus = true;
			this.includeMonoCheck.Name = "includeMonoCheck";
			this.includeMonoCheck.Label = global::Mono.Unix.Catalog.GetString ("checkbutton4");
			this.includeMonoCheck.Active = true;
			this.includeMonoCheck.DrawIndicator = true;
			this.includeMonoCheck.UseUnderline = true;
			this.includeMonoCheck.Remove (this.includeMonoCheck.Child);
			// Container child includeMonoCheck.Gtk.Container+ContainerChild
			this.labelBlah = new global::Gtk.Label ();
			this.labelBlah.Name = "labelBlah";
			this.labelBlah.LabelProp = global::Mono.Unix.Catalog.GetString ("Include Mono in application bundle <i>(Required for App Store)</i>");
			this.labelBlah.UseMarkup = true;
			this.includeMonoCheck.Add (this.labelBlah);
			this.vbox1.Add (this.includeMonoCheck);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.includeMonoCheck]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.alignment2 = new global::Gtk.Alignment (0.5F, 0.5F, 1F, 1F);
			this.alignment2.Name = "alignment2";
			this.alignment2.LeftPadding = ((uint)(24));
			// Container child alignment2.Gtk.Container+ContainerChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.TooltipMarkup = "The linker reduces the size of the application by removing unused code.\nIt is especially useful to reduce the size of the bundled Mono runtime.";
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.linkerLabel = new global::Gtk.Label ();
			this.linkerLabel.Name = "linkerLabel";
			this.linkerLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Linker:");
			this.hbox1.Add (this.linkerLabel);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.linkerLabel]));
			w3.Position = 0;
			w3.Expand = false;
			w3.Fill = false;
			// Container child hbox1.Gtk.Box+BoxChild
			this.linkerCombo = global::Gtk.ComboBox.NewText ();
			this.linkerCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Don't link assemblies"));
			this.linkerCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Link framework assemblies"));
			this.linkerCombo.AppendText (global::Mono.Unix.Catalog.GetString ("Link all assemblies"));
			this.linkerCombo.Name = "linkerCombo";
			this.linkerCombo.Active = 0;
			this.hbox1.Add (this.linkerCombo);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.linkerCombo]));
			w4.Position = 1;
			w4.Expand = false;
			w4.Fill = false;
			this.alignment2.Add (this.hbox1);
			this.vbox1.Add (this.alignment2);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.alignment2]));
			w6.Position = 1;
			w6.Expand = false;
			w6.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.table1 = new global::Gtk.Table (((uint)(6)), ((uint)(4)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.bundleIdentityCombo = new global::MonoDevelop.MacDev.SigningIdentityCombo ();
			this.bundleIdentityCombo.Name = "bundleIdentityCombo";
			this.table1.Add (this.bundleIdentityCombo);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table1 [this.bundleIdentityCombo]));
			w7.TopAttach = ((uint)(1));
			w7.BottomAttach = ((uint)(2));
			w7.LeftAttach = ((uint)(3));
			w7.RightAttach = ((uint)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.bundleSigningLabel = new global::Gtk.Label ();
			this.bundleSigningLabel.Name = "bundleSigningLabel";
			this.bundleSigningLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Signing identity:");
			this.table1.Add (this.bundleSigningLabel);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table1 [this.bundleSigningLabel]));
			w8.TopAttach = ((uint)(1));
			w8.BottomAttach = ((uint)(2));
			w8.LeftAttach = ((uint)(2));
			w8.RightAttach = ((uint)(3));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.createPackageCheck = new global::Gtk.CheckButton ();
			this.createPackageCheck.TooltipMarkup = "Creates an installer package from the app bundle.";
			this.createPackageCheck.CanFocus = true;
			this.createPackageCheck.Name = "createPackageCheck";
			this.createPackageCheck.Label = global::Mono.Unix.Catalog.GetString ("Sign Application Bundle");
			this.createPackageCheck.Active = true;
			this.createPackageCheck.DrawIndicator = true;
			this.createPackageCheck.UseUnderline = true;
			this.createPackageCheck.Remove (this.createPackageCheck.Child);
			// Container child createPackageCheck.Gtk.Container+ContainerChild
			this.label3636 = new global::Gtk.Label ();
			this.label3636.Name = "label3636";
			this.label3636.LabelProp = global::Mono.Unix.Catalog.GetString ("Create installer package <i>(Required for App Store)</i>");
			this.label3636.UseMarkup = true;
			this.createPackageCheck.Add (this.label3636);
			this.table1.Add (this.createPackageCheck);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table1 [this.createPackageCheck]));
			w10.TopAttach = ((uint)(2));
			w10.BottomAttach = ((uint)(3));
			w10.RightAttach = ((uint)(4));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.WidthRequest = 12;
			this.label2.Name = "label2";
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w11.TopAttach = ((uint)(1));
			w11.BottomAttach = ((uint)(2));
			w11.LeftAttach = ((uint)(1));
			w11.RightAttach = ((uint)(2));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label8 = new global::Gtk.Label ();
			this.label8.WidthRequest = 12;
			this.label8.Name = "label8";
			this.table1.Add (this.label8);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table1 [this.label8]));
			w12.TopAttach = ((uint)(1));
			w12.BottomAttach = ((uint)(2));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.packageIdentityCombo = new global::MonoDevelop.MacDev.SigningIdentityCombo ();
			this.packageIdentityCombo.Name = "packageIdentityCombo";
			this.table1.Add (this.packageIdentityCombo);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table1 [this.packageIdentityCombo]));
			w13.TopAttach = ((uint)(4));
			w13.BottomAttach = ((uint)(5));
			w13.LeftAttach = ((uint)(3));
			w13.RightAttach = ((uint)(4));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.packageSigningLabel = new global::Gtk.Label ();
			this.packageSigningLabel.Name = "packageSigningLabel";
			this.packageSigningLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Signing identity:");
			this.table1.Add (this.packageSigningLabel);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.table1 [this.packageSigningLabel]));
			w14.TopAttach = ((uint)(4));
			w14.BottomAttach = ((uint)(5));
			w14.LeftAttach = ((uint)(2));
			w14.RightAttach = ((uint)(3));
			w14.XOptions = ((global::Gtk.AttachOptions)(4));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.productDefinitionFileEntry = new global::MonoDevelop.Components.FileEntry ();
			this.productDefinitionFileEntry.Name = "productDefinitionFileEntry";
			this.table1.Add (this.productDefinitionFileEntry);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.table1 [this.productDefinitionFileEntry]));
			w15.TopAttach = ((uint)(5));
			w15.BottomAttach = ((uint)(6));
			w15.LeftAttach = ((uint)(3));
			w15.RightAttach = ((uint)(4));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.productDefinitionLabel = new global::Gtk.Label ();
			this.productDefinitionLabel.Name = "productDefinitionLabel";
			this.productDefinitionLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Product definition:");
			this.table1.Add (this.productDefinitionLabel);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.table1 [this.productDefinitionLabel]));
			w16.TopAttach = ((uint)(5));
			w16.BottomAttach = ((uint)(6));
			w16.LeftAttach = ((uint)(1));
			w16.RightAttach = ((uint)(3));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.signBundleCheck = new global::Gtk.CheckButton ();
			this.signBundleCheck.TooltipMarkup = "The application bundle can be signed to verify its origin.";
			this.signBundleCheck.CanFocus = true;
			this.signBundleCheck.Name = "signBundleCheck";
			this.signBundleCheck.Label = global::Mono.Unix.Catalog.GetString ("Sign Application Bundle");
			this.signBundleCheck.Active = true;
			this.signBundleCheck.DrawIndicator = true;
			this.signBundleCheck.UseUnderline = true;
			this.signBundleCheck.Remove (this.signBundleCheck.Child);
			// Container child signBundleCheck.Gtk.Container+ContainerChild
			this.label12 = new global::Gtk.Label ();
			this.label12.Name = "label12";
			this.label12.LabelProp = global::Mono.Unix.Catalog.GetString ("Sign application bundle <i>(Required for App Store)</i>");
			this.label12.UseMarkup = true;
			this.signBundleCheck.Add (this.label12);
			this.table1.Add (this.signBundleCheck);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.table1 [this.signBundleCheck]));
			w18.RightAttach = ((uint)(4));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.signPackageCheck = new global::Gtk.CheckButton ();
			this.signPackageCheck.TooltipMarkup = "The installer package can be signed to verify its origin.";
			this.signPackageCheck.CanFocus = true;
			this.signPackageCheck.Name = "signPackageCheck";
			this.signPackageCheck.Label = global::Mono.Unix.Catalog.GetString ("checkbutton4");
			this.signPackageCheck.Active = true;
			this.signPackageCheck.DrawIndicator = true;
			this.signPackageCheck.UseUnderline = true;
			this.signPackageCheck.Remove (this.signPackageCheck.Child);
			// Container child signPackageCheck.Gtk.Container+ContainerChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Sign installer package <i>(Required for App Store)</i>");
			this.label1.UseMarkup = true;
			this.signPackageCheck.Add (this.label1);
			this.table1.Add (this.signPackageCheck);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.table1 [this.signPackageCheck]));
			w20.TopAttach = ((uint)(3));
			w20.BottomAttach = ((uint)(4));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(4));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			this.vbox1.Add (this.table1);
			global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.table1]));
			w21.Position = 2;
			w21.Expand = false;
			w21.Fill = false;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.linkerLabel.MnemonicWidget = this.linkerCombo;
			this.bundleSigningLabel.MnemonicWidget = this.bundleIdentityCombo;
			this.packageSigningLabel.MnemonicWidget = this.packageIdentityCombo;
			this.productDefinitionLabel.MnemonicWidget = this.productDefinitionFileEntry;
			this.Hide ();
		}
	}
}
